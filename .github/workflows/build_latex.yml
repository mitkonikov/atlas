name: Build and Release LaTeX book

on:
  push:
    branches:
      - main
    tags-ignore:
      - '*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # ðŸš€ Grants permission to push tags
    steps:
      - uses: actions/checkout@v4
      - uses: xu-cheng/texlive-action@v2
        with:
          scheme: full
          run: |
            echo "Installing dependencies..."
            apk add py3-pygments
            echo "Listing files in current directory..."
            ls .
            echo "Building LaTeX book..."
            latexmk -c
            latexmk -bibtex -pdf -interaction=nonstopmode competitive.tex
            latexmk -c

      - name: List Files
        run: ls

      - name: Upload PDF file
        uses: actions/upload-artifact@v4
        with:
          name: PDF
          path: competitive.pdf
      
      - name: Set Environment Variables for Secrets
        run: |
          echo "VERSION_MAJOR_MINOR=${{ secrets.VERSION_MAJOR_MINOR }}" >> $GITHUB_ENV
          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

      - name: Get Latest Release Tag
        id: get_version
        run: |
          BASE_VERSION="${{ secrets.VERSION_MAJOR_MINOR }}"

          if [[ "$BASE_VERSION" =~ ^v[0-9]+\.[0-9]+\.0$ ]]; then
            BASE_VERSION="${BASE_VERSION%.*}"
          else
            echo "If it's a fork, we shouldn't make releases."
            exit 0
          fi

          LATEST_TAG=$(git tag --sort=-v:refname | grep -E "^${BASE_VERSION}\.[0-9]+$" | head -n 1)

          if [[ "$LATEST_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            PATCH_NUMBER=$(echo "$LATEST_TAG" | awk -F. '{print $3}')
            NEW_VERSION="${BASE_VERSION}.$((PATCH_NUMBER + 1))"
          else
            NEW_VERSION="${BASE_VERSION}.0"
          fi

          echo "NEW_TAG=$NEW_VERSION" >> $GITHUB_ENV
          echo "Next release: $NEW_VERSION"

      - name: Configure Git
        run: |
          if [[ "$BASE_VERSION" =~ ^v[0-9]+\.[0-9]+\.0$ ]]; then
            echo ${BASE_VERSION}
          else
            echo "If it's a fork, we shouldn't push a new tag."
            exit 0
          fi

          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/mitkonikov/atlas.git

      - name: Push New Tag
        run: |
          BASE_VERSION="${{ secrets.VERSION_MAJOR_MINOR }}"

          if [[ "$BASE_VERSION" =~ ^v[0-9]+\.[0-9]+\.0$ ]]; then
            echo ${BASE_VERSION}
          else
            echo "If it's a fork, we shouldn't push a new tag."
            exit 0
          fi
          
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Create Release
        if: env.VERSION_MAJOR_MINOR != '' && env.GITHUB_TOKEN != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: "Release ${{ env.NEW_TAG }}"
          body: "Automated release of the latest LaTeX PDF build of the Atlas."
          files: competitive.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}